import cv2
import numpy as np
from skimage import util

#均值哈希
def aHash(img):
    img = cv2.resize(img, (8, 8), interpolation = cv2.INTER_CUBIC) #双三次插值
    gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)
    sum = 0
    for i in range(8):
        for j in range(8):
           sum += gray[i, j]
    avg = sum / 64
    s = ''
    for i in range(8):
        for j in range(8):
            if gray[i, j] > avg:
                s += '1'
            else:
                s += '0'
    return s

#差值哈希
def dHash(img):
    img = cv2.resize(img, (9, 8), interpolation = cv2.INTER_CUBIC)
    gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)
    s = ''
    for i in range(8):
        for j in range(8):
            if gray[i, j] >gray[i, j + 1]:
                s += '1'
            else:
                s += '0'
    return s

#计算汉明距离
def cmpHash(hash1, hash2):
    if len(hash1) != len(hash2):
        return -1
    n = 0
    for i in range(len(hash1)):
        if hash1[i] != hash2[i]:
            n += 1
    return n

img1 = cv2.imread('lenna.png')
img2 = util.random_noise(img1, 'gaussian').astype(np.float32)
cv2.imshow('lenna', img1)
cv2.imshow('lenna_noise', img2)
#均值哈希比较
hash1 = aHash(img1)
hash2 = aHash(img2)
print(hash1)
print(hash2)
n = cmpHash(hash1, hash2)
print('图像相似度为：', n)
#差值哈希比较
hash1 = dHash(img1)
hash2 = dHash(img2)
print(hash1)
print(hash2)
n = cmpHash(hash1, hash2)
print('图像相似度为：', n)
cv2.waitKey(0)
