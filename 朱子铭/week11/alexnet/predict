import numpy as np
import utils
import cv2
from keras import backend as K
from model.AlexNet import Alexnet

# K.set_image_dim_ordering("tf")
K.image_data_format() == "channel_first"

if __name__ =="__main__":
    model = Alexnet()
    model.load_weights("./logs/last1.h5") #加载预训练的权重文件（./logs/last1.h5）到模型中。
    img = cv2.imread("./test2.jpg") #使用 cv2（OpenCV）读取一张图像文件（./test2.jpg
    img_RGB = cv2.cvtColor(img,cv2.COLOR_BGR2RGB) #将读取的图像从 BGR 颜色格式转换为 RGB 颜色格式
    img_nor = img_RGB/255 #将图像的像素值归一化到 0 到 1 的范围。
    img_nor = np.expand_dims(img_nor,axis=0) #为图像增加一个维度，通常是为了适应模型的输入要求。
    img_resize = utils.resize_image(img_nor,(224,224)) #使用自定义的 utils 模块中的 resize_image 函数将图像调整为特定大小（224x224）。
    # utils.print_answer(np.argmax(model.predict(img)))
    print("the answer is: ",utils.print_answer(np.argmax(model.predict(img_resize))))
    #使用模型对调整大小后的图像进行预测，取预测结果中概率最大的类别索引，然后通过 utils 模块的 print_answer 函数打印出对应的答案。
    cv2.imshow("ooo",img)
    cv2.waitKey(0)
