import cv2
import numpy as np

from google.colab import drive
drive.mount('/content/drive')

# 均值hash算法
def aHash(img):
  img = cv2.resize(img, (8,8), interpolation=cv2.INTER_CUBIC)
  gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)
  s = 0
  hash_str = ''

  for i in range(8):
    for j in range(8):
      s = s+gray[i,j]
  
  avg = s/64
  #灰度大于平均值为1相反为0生成图片的hash值
  for i in range(8):
    for j in range(8):
      if gray[i,j] > avg:
        hash_str += '1'
      else:
        hash_str += '0'
  return hash_str

# 差值hash算法
def dHash(img):
  img = cv2.resize(img, (9,8), interpolation=cv2.INTER_CUBIC)
  gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)
  hash_str = ''
  #每行前一个像素大于后一个像素为1，相反为0，生成hash值
  for i in range(8):
    for j in range(8):
      if gray[i,j] > gray[i, j+1]:
        hash_str += '1'
      else:
        hash_str += '0'
  return hash_str


# 汉明距离
def cmpHash(hash1, hash2):
  n = 0
  if len(hash1) != len(hash2):
    return -1
  
  for i in range(len(hash1)):
    if hash1[i] != hash2[i]:
      n += 1
  return n


img1 = cv2.imread('/content/drive/MyDrive/lenna.png')
img2 = cv2.imread('/content/drive/MyDrive/lenna.png')
hash1 = aHash(img1)
hash2 = aHash(img2)
print(hash1)
print(hash2)
n = cmpHash(hash1, hash2)
print('均值hash算法相似度：',n)

img1 = cv2.imread('/content/drive/MyDrive/lenna.png')
img2 = cv2.imread('/content/drive/MyDrive/lenna.png')
hash1 = dHash(img1)
hash2 = dHash(img2)
print(hash1)
print(hash2)
n = cmpHash(hash1, hash2)
print('差值hash算法相似度：',n)
