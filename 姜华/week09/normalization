import numpy as np
import matplotlib.pyplot as plt


# 归一化的两种方式
def Normalization1(x):
    '''归一化（0~1）,把样本归到0-1之间'''
    '''x_=(x−x_min)/(x_max−x_min)'''
    return [(float(i) - min(x)) / float(max(x) - min(x)) for i in x]


def Normalization2(x):
    '''归一化（-1~1），把样本归到-1~1之间'''
    '''x_=(x−x_mean)/(x_max−x_min)'''
    return [(float(i) - np.mean(x)) / (max(x) - min(x)) for i in x]


# 标准化
def z_score(x):
    '''x∗=(x−μ)/σ'''
    # μ是均值，σ是标准差
    x_mean = np.mean(x)
    s2 = sum([(i - np.mean(x)) ** 2 for i in x]) / len(x)
    s2 = np.sqrt(s2)
    return [(i - x_mean) / s2 for i in x]


l = [-10, 5, 5, 6, 6, 6, 7, 7, 7, 7, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11,
     11, 12, 12, 12, 12, 12, 13, 13, 13, 13, 14, 14, 14, 15, 15, 30]
l1 = []
# for i in l:
#     i+=2
#     l1.append(i)
# print(l1)
cs = []
for i in l:
    c = l.count(i)
    cs.append(c)
print(cs)
n1 = Normalization1(l)
n2 = Normalization2(l)
n3 = z_score(l)
print(n1)
print(n2)
print(n3)
'''
蓝线为原始数据，橙线为z
'''
plt.plot(l, cs,)
plt.plot(n1, cs,color='r')
plt.plot(n2, cs,color='g')
plt.plot(n3, cs,color='b')
plt.show()
